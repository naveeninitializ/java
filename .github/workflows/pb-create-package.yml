name: Create Package
on:
  release:
    types:
      - published
jobs:
  create-package:
    name: Create Package
    runs-on: ubuntu-latest
    steps:
      - name: Docker login docker.io
        if: ${{ (github.event_name != 'pull_request' || ! github.event.pull_request.head.repo.fork) && (github.actor != 'dependabot[bot]') }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - uses: actions/checkout@v3
      
      - name: Compute Version
        id: version
        run: |
          set -euo pipefail
          if [ -z "${GITHUB_REF+set}" ]; then
            echo "GITHUB_REF set to [${GITHUB_REF-<unset>}], but should never be empty or unset"
            exit 255
          fi
          if [[ ${GITHUB_REF} =~ refs/tags/v([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION=${BASH_REMATCH[1]}
            MAJOR_VERSION="$(echo "${VERSION}" | awk -F '.' '{print $1 }')"
            MINOR_VERSION="$(echo "${VERSION}" | awk -F '.' '{print $1 "." $2 }')"
            echo "version-major=${MAJOR_VERSION}" >> "$GITHUB_OUTPUT"
            echo "version-minor=${MINOR_VERSION}" >> "$GITHUB_OUTPUT"
          elif [[ ${GITHUB_REF} =~ refs/heads/(.+) ]]; then
            VERSION=${BASH_REMATCH[1]}
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Selected ${VERSION} from
            * ref: ${GITHUB_REF}
            * sha: ${GITHUB_SHA}
          "
          
      - name: Create Package
        run: |
          set -euo pipefail
          export CGO_ENABLED=0
          create-package \
            --source ${SOURCE_PATH:-.} \
            --destination "${HOME}"/buildpack \
            --version "${VERSION}"
          PACKAGE_FILE=${SOURCE_PATH:-.}/package.toml
          [[ -e ${PACKAGE_FILE} ]] && cp ${PACKAGE_FILE} "${HOME}"/package.toml
          printf '[buildpack]\nuri = "%s"\n\n[platform]\nos = "%s"\n' "${HOME}"/buildpack "${OS}" >> "${HOME}"/package.toml
        env:
          OS: linux
          SOURCE_PATH: ""
          VERSION: ${{ steps.version.outputs.version }}

      - name: Tag and Push to Docker Hub
        run: |
          set -euo pipefail
          PACKAGE=${{ secrets.DOCKERHUB_USERNAME }}/buildpacks
          crane tag "${PACKAGE}:${VERSION}" latest
          crane tag "${PACKAGE}:${VERSION}" "${VERSION}"
          crane tag "${PACKAGE}:${VERSION}" "${VERSION_MAJOR}"
          crane tag "${PACKAGE}:${VERSION}" "${VERSION_MINOR}"
          crane push "${PACKAGE}:${VERSION}"
          crane push "${PACKAGE}:${VERSION_MAJOR}"
          crane push "${PACKAGE}:${VERSION_MINOR}"
          crane push "${PACKAGE}:latest"
